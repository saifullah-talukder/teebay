generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  email          String        @unique
  password       String
  firstName      String
  lastName       String
  products       Product[]
  boughtProducts Transaction[] @relation("Buyer")
  soldProducts   Transaction[] @relation("Seller")
  rentedProducts Rental[]      @relation("Renter")
  lentProducts   Rental[]      @relation("Owner")
}

model Product {
  id           String        @id @default(uuid())
  title        String
  description  String
  price        Float
  rentPrice    Float? // Per day
  categories   Category[]
  owner        User          @relation(fields: [ownerId], references: [id])
  ownerId      String
  isAvailable  Boolean       @default(true)
  isRentable   Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  rentals      Rental[]
}

model Category {
  name     String    @id
  products Product[]
}

model Transaction {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  buyer     User     @relation("Buyer", fields: [buyerId], references: [id])
  buyerId   String
  seller    User     @relation("Seller", fields: [sellerId], references: [id])
  sellerId  String
  price     Float
  createdAt DateTime @default(now())
}

model Rental {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  renter    User     @relation("Renter", fields: [renterId], references: [id])
  renterId  String
  owner     User     @relation("Owner", fields: [ownerId], references: [id])
  ownerId   String
  startDate DateTime
  endDate   DateTime
  price     Float // Total price
  createdAt DateTime @default(now())
}
